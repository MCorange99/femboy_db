# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!
      
      - name: Update files
        run: |
          rm -rfv /var/api/orcord-v1/*
          cp -rfv ./* /var/api/orcord-v1/

      # Runs a set of commands using the runners shell
      # ${{ secrets.GITHUB_TOKEN }}

      - name: Build application
        run: |
          cd /var/api/orcord-v1/
          pwd
          yarn
          yarn build


      - name: Build config
        run: |
          cd /var/api/orcord-v1/
          echo "{" > ./config.json
          echo "    \"database\": {" >> ./config.json
          echo "        \"main\": {" >> ./config.json
          echo "            \"url\": \"${{ secrets.DB_URL }}\"," >> ./config.json
          echo "            \"protocol\": \"${{ secrets.DB_PROTOCOL }}\"," >> ./config.json
          echo "            \"username\": \"${{ secrets.DB_USERNAME }}\"," >> ./config.json
          echo "            \"password\": \"${{ secrets.DB_PASSWORD }}\"" >> ./config.json
          echo "        }" >> ./config.json
          echo "    }," >> ./config.json
          echo "    \"rest\": {" >> ./config.json
          echo "        \"ip\": \"${{ secrets.REST_IP }}\"," >> ./config.json
          echo "        \"port\": ${{ secrets.REST_PORT }}" >> ./config.json
          echo "    }" >> ./config.json
          echo "}" >> ./config.json
      
      - name: Update service
        run: |
          cd /var/api/orcord-v1/ 
          export XDG_RUNTIME_DIR=/run/user/$(id -u)                                     # systemctl errors out without this
          cp ./deploy/orcord-v1.service /home/$USER/.config/systemd/user/orcord-v1.service    # update service file
          systemctl --user daemon-reload

      - name: Update nginx config
        run: |
          cd /var/api/orcord-v1/ 
          export XDG_RUNTIME_DIR=/run/user/$(id -u)
          sudo cp ./deploy/api.orcord.conf /etc/nginx/conf.d/api.orcord.conf

      - name: Restart
        run: |
          cd /var/api/orcord-v1/ 
          export XDG_RUNTIME_DIR=/run/user/$(id -u)                                     # systemctl errors out without this
          systemctl --user restart orcord-v1
          sudo systemctl restart nginx
          
